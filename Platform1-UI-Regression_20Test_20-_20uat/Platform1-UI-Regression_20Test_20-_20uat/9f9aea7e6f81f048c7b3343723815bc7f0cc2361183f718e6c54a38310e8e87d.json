{
  "name": "verifyBetweenFlow313To313SameSsn()",
  "id": "[engine:junit-jupiter]/[class:com.edwardjones.platform_ui_tests.testcases.BetweenRetirementAccountToAccountTransferToggleOn]/[method:verifyBetweenFlow313To313SameSsn()]",
  "scenarioId": "[engine:junit-jupiter]/[class:com.edwardjones.platform_ui_tests.testcases.BetweenRetirementAccountToAccountTransferToggleOn]",
  "testCaseName": "com.edwardjones.platform_ui_tests.testcases.BetweenRetirementAccountToAccountTransferToggleOn",
  "methodName": "verifyBetweenFlow313To313SameSsn",
  "testSteps": [
    {
      "number": 1,
      "description": "Retrieve DB data for \u0027Between\u0027 flow: ruleID from 313, rule ID to 313, same SSN true",
      "duration": 65320,
      "startTime": "2025-10-06T10:29:43.198925568-05:00[America/Chicago]",
      "screenshots": [
        {
          "screenshot": "0122f205b74b61f69f1a9c74ebc1cd1ceea9e225adcf25194e501e3a0c5baf0a.png",
          "htmlSource": "pagesource12727658285434245414.html",
          "timeStamp": 1759764648517,
          "screenshotName": "0122f205b74b61f69f1a9c74ebc1cd1ceea9e225adcf25194e501e3a0c5baf0a.png"
        }
      ],
      "exception": {
        "errorType": "com.edwardjones.database.exceptions.DbDataIsNotRetrievedException",
        "message": "Error in reading data from DB2",
        "stackTrace": [
          {
            "declaringClass": "com.edwardjones.database.helpers.Db2Helper",
            "methodName": "getResultSet",
            "fileName": "Db2Helper.java",
            "lineNumber": 69
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
            "methodName": "readDb2Data",
            "fileName": "BaseTestDataProvider.java",
            "lineNumber": 119
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
            "methodName": "readDb2Data",
            "fileName": "BaseTestDataProvider.java",
            "lineNumber": 106
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
            "methodName": "readDataForRelationships",
            "fileName": "BetweenFlowDb2TestDataProvider.java",
            "lineNumber": 372
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
            "methodName": "readDataForRelationships",
            "fileName": "BetweenFlowDb2TestDataProvider.java",
            "lineNumber": 363
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
            "methodName": "readDataPart1",
            "fileName": "BetweenFlowDb2TestDataProvider.java",
            "lineNumber": 296
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
            "methodName": "getData",
            "fileName": "BetweenFlowDb2TestDataProvider.java",
            "lineNumber": 265
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
            "methodName": "getData",
            "fileName": "BetweenFlowDb2TestDataProvider.java",
            "lineNumber": 220
          },
          {
            "declaringClass": "com.edwardjones.platform_ui_tests.testcases.BetweenRetirementAccountToAccountTransferToggleOn",
            "methodName": "verifyBetweenFlow313To313SameSsn",
            "fileName": "BetweenRetirementAccountToAccountTransferToggleOn.java",
            "lineNumber": 380
          },
          {
            "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
            "methodName": "run",
            "fileName": "GradleWorkerMain.java",
            "lineNumber": 69
          },
          {
            "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
            "methodName": "main",
            "fileName": "GradleWorkerMain.java",
            "lineNumber": 74
          }
        ],
        "rootCause": {
          "errorType": "com.ibm.db2.jcc.am.DisconnectNonTransientConnectionException",
          "message": "[jcc][t4][2030][11211][4.29.24] A communication error occurred during operations on the connection\u0027s underlying socket, socket input stream, \nor socket output stream.  Error location: Query timeout check.  Message: Query timed out. ERRORCODE\u003d-4499, SQLSTATE\u003d08001",
          "stackTrace": [
            {
              "declaringClass": "com.ibm.db2.jcc.am.b7",
              "methodName": "a",
              "fileName": "b7.java",
              "lineNumber": 338
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.a",
              "methodName": "a",
              "fileName": "a.java",
              "lineNumber": 573
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.a",
              "methodName": "a",
              "fileName": "a.java",
              "lineNumber": 557
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.b",
              "methodName": "l",
              "fileName": "b.java",
              "lineNumber": 7866
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.a",
              "methodName": "y",
              "fileName": "a.java",
              "lineNumber": 1737
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.a",
              "methodName": "a",
              "fileName": "a.java",
              "lineNumber": 1721
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.y",
              "methodName": "b",
              "fileName": "y.java",
              "lineNumber": 276
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.y",
              "methodName": "c",
              "fileName": "y.java",
              "lineNumber": 342
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.y",
              "methodName": "c",
              "fileName": "y.java",
              "lineNumber": 455
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.y",
              "methodName": "v",
              "fileName": "y.java",
              "lineNumber": 1230
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.ab",
              "methodName": "b",
              "fileName": "ab.java",
              "lineNumber": 93
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.p",
              "methodName": "a",
              "fileName": "p.java",
              "lineNumber": 32
            },
            {
              "declaringClass": "com.ibm.db2.jcc.t4.av",
              "methodName": "i",
              "fileName": "av.java",
              "lineNumber": 150
            },
            {
              "declaringClass": "com.ibm.db2.jcc.am.k9",
              "methodName": "al",
              "fileName": "k9.java",
              "lineNumber": 2223
            },
            {
              "declaringClass": "com.ibm.db2.jcc.am.k9",
              "methodName": "a",
              "fileName": "k9.java",
              "lineNumber": 3351
            },
            {
              "declaringClass": "com.ibm.db2.jcc.am.k9",
              "methodName": "a",
              "fileName": "k9.java",
              "lineNumber": 741
            },
            {
              "declaringClass": "com.ibm.db2.jcc.am.k9",
              "methodName": "executeQuery",
              "fileName": "k9.java",
              "lineNumber": 720
            },
            {
              "declaringClass": "com.edwardjones.database.helpers.Db2Helper",
              "methodName": "getResultSet",
              "fileName": "Db2Helper.java",
              "lineNumber": 54
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
              "methodName": "readDb2Data",
              "fileName": "BaseTestDataProvider.java",
              "lineNumber": 119
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
              "methodName": "readDb2Data",
              "fileName": "BaseTestDataProvider.java",
              "lineNumber": 106
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
              "methodName": "readDataForRelationships",
              "fileName": "BetweenFlowDb2TestDataProvider.java",
              "lineNumber": 372
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
              "methodName": "readDataForRelationships",
              "fileName": "BetweenFlowDb2TestDataProvider.java",
              "lineNumber": 363
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
              "methodName": "readDataPart1",
              "fileName": "BetweenFlowDb2TestDataProvider.java",
              "lineNumber": 296
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
              "methodName": "getData",
              "fileName": "BetweenFlowDb2TestDataProvider.java",
              "lineNumber": 265
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
              "methodName": "getData",
              "fileName": "BetweenFlowDb2TestDataProvider.java",
              "lineNumber": 220
            },
            {
              "declaringClass": "com.edwardjones.platform_ui_tests.testcases.BetweenRetirementAccountToAccountTransferToggleOn",
              "methodName": "verifyBetweenFlow313To313SameSsn",
              "fileName": "BetweenRetirementAccountToAccountTransferToggleOn.java",
              "lineNumber": 380
            },
            {
              "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
              "methodName": "run",
              "fileName": "GradleWorkerMain.java",
              "lineNumber": 69
            },
            {
              "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
              "methodName": "main",
              "fileName": "GradleWorkerMain.java",
              "lineNumber": 74
            }
          ]
        }
      },
      "result": "ERROR",
      "reportData": [
        {
          "title": "SQL query",
          "contents": "select\nrlt.RLTSHP_ID AS RELID, sub_acc.BR_NO,\ncount(distinct sub_acc.TAX_RPT_TIN_NO) as SSN_COUNT,\ncount(distinct sub_acc_svc.acct_ID) as ACCOUNTS_COUNT,\nmin(sub_acc.TAX_RPT_TIN_NO) as ssn1, max(sub_acc.TAX_RPT_TIN_NO) as ssn2,\nmin(sub_acc_svc.acct_ID) as acct1, max(sub_acc_svc.acct_ID) as acct2\n\nfrom PROD.SUB_ACCOUNT_12512 as sub_acc\njoin PROD.SUBACCT_SVC_12569 sub_acc_svc on sub_acc.ACCT_ID \u003d sub_acc_svc.ACCT_ID\njoin PROD.RLTSHP_13120 as rlt on rlt.ACCT_FUNC_GRP_ID \u003d acctgrp.ACCT_FUNC_GRP_ID\njoin PROD.ACCT_FUNC_GRP_DTL_13088 as acctgrp on acctgrp.ACCT_ID\u003dsub_acc.ACCT_ID\njoin PROD.ACCOUNT_12280 account on account.ACCT_ID\u003dsub_acc.ACCT_ID\nwhere\n sub_acc.ACCT_OWN_SUBTY_CD is not NULL and\nsub_acc.ACCT_CLS_UT is NULL\nand sub_acc.BR_NO in (1626, 2153, 4369, 9005, 3434, 94674, 87782, 7822, 5897, 3997, 19864, 99785, 99732, 99464, 99447, 98594, 95528, 4454, 9979)\nand sub_acc_svc.ISO_CTRY_CD\u003d\u0027US\u0027\nand account.acct_own_rule_id in (313)\nand account.dcdnt_retr_ind \u003d \u0027N\u0027\n-- and sub_acc_svc.ACCT_SVC_TY_CD in ()\n-- and sub_acc_svc.ACCT_SVC_STAT_CD in (\u0027A\u0027, \u0027C\u0027)\n-- and rlt.RLTSHP_ID in ()\n\nand sub_acc.acct_id not in \n(               select a.acct_id\n                from\n                    PROD.ACCOUNT_12280 a\n                    left outer join PROD.acct_rst_10214 v on v.account_no\u003d a.cust_no\n                    inner join PROD.ACCT_OWN_RUL_12520 acc_own_rule on acc_own_rule.ACCT_OWN_RULE_ID \u003d  a.ACCT_OWN_RULE_ID\n                    inner join PROD.OWN_CLASS_12680 cls on  acc_own_rule.ACCT_OWN_RULE_ID \u003d  cls.ACCT_OWN_RULE_ID\n                    inner join PROD.SUB_ACCOUNT_12512 as sub_acc on sub_acc.ACCT_ID\u003da.ACCT_ID\n                where\n                    v.rst_rsn_cd is not null\n                    and v.rst_rsn_cd in (\u0027AUTH\u0027, \u0027DOCU\u0027, \u0027WARN\u0027, \u0027CIPR\u0027, \u0027COPD\u0027, \u0027CO\u0027, \u0027RISK\u0027, \u0027SSN\u0027, \u0027FTRN\u0027, \u002772T\u0027, \u0027MISC\u0027, \u0027MAIL\u0027, \u0027FOR\u0027, \u0027FOR2\u0027, \u0027R471\u0027, \u0027R407\u0027,\u0027DEATH\u0027)\n\t\t\t\t\tand a.acct_own_rule_id in (313)\n                    and sub_acc.BR_NO in (1626, 2153, 4369, 9005, 3434, 94674, 87782, 7822, 5897, 3997, 19864, 99785, 99732, 99464, 99447, 98594, 95528, 4454, 9979)\n                    and a.ACCT_CLS_DA is null\n                    and v.RST_START_DA\u003c\u00272025-10-06\u0027\n)\n\ngroup by rlt.RLTSHP_ID, sub_acc.BR_NO\nhaving \ncount(distinct sub_acc_svc.ACCT_ID)\u003e1 \nand count(distinct sub_acc.TAX_RPT_TIN_NO) \u003d 1\nand count(distinct account.acct_own_rule_id) \u003d 1\n\n-- and min(case (accountsData.COUNT_CASH + accountsData.COUNT_MARGIN*2 + accountsData.COUNT_LOAN*4) when 1 then accountsData.acct_ID end) is not null\n-- and max(case (accountsData.COUNT_CASH + accountsData.COUNT_MARGIN*2 + accountsData.COUNT_LOAN*4) when 1 then accountsData.acct_ID end) is not null\n-- and min(case (accountsData.COUNT_CASH + accountsData.COUNT_MARGIN*2 + accountsData.COUNT_LOAN*4) when 7 then accountsData.acct_ID end) is not null\n-- and max(case (accountsData.COUNT_CASH + accountsData.COUNT_MARGIN*2 + accountsData.COUNT_LOAN*4) when 7 then accountsData.acct_ID end) is not null\n\nfetch first 1 rows only;",
          "isEvidence": false,
          "id": "report-data-52b3968a-6ba9-4494-948e-9848309d2cee"
        }
      ],
      "precondition": false,
      "level": 0
    },
    {
      "number": 2,
      "description": "Get p-number for BOA of branch \u003cnull\u003e, relationship \u003cnull\u003e, account \u003cnull\u003e, for Platform flow",
      "duration": 0,
      "startTime": "2025-10-06T10:30:48.523264275-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 3,
      "description": "Authenticating the session with pid: ",
      "duration": 0,
      "startTime": "2025-10-06T10:30:48.526817704-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 4,
      "description": "Start test flow: Between transfer and verify restrictions for Acccount To",
      "duration": 0,
      "startTime": "2025-10-06T10:30:48.530421670-05:00[America/Chicago]",
      "result": "SKIPPED",
      "reportData": [
        {
          "title": "...qTest Listener disabled",
          "contents": "Listener disabled or Serenity \u0027Result\u0027 is \u0027IGNORED\u0027 or Test Suite is invalid",
          "isEvidence": false,
          "id": "report-data-b66e965b-8edb-4431-871c-c599247399eb"
        },
        {
          "title": "Error submitting test results. INFO only",
          "contents": "closed",
          "isEvidence": false,
          "id": "report-data-7589786e-63c6-42f2-b600-2ec16912877c"
        }
      ],
      "precondition": false,
      "level": 0
    }
  ],
  "userStory": {
    "id": "com.edwardjones.platform_ui_tests.testcases.BetweenRetirementAccountToAccountTransferToggleOn",
    "storyName": "BetweenRetirementAccountToAccountTransferToggleOn",
    "displayName": "BetweenRetirementAccountToAccountTransferToggleOn",
    "storyClassName": "com.edwardjones.platform_ui_tests.testcases.BetweenRetirementAccountToAccountTransferToggleOn",
    "path": "com.edwardjones.platform_ui_tests.testcases.BetweenRetirementAccountToAccountTransferToggleOn",
    "pathElements": [
      {
        "name": "com",
        "description": "com"
      },
      {
        "name": "edwardjones",
        "description": "edwardjones"
      },
      {
        "name": "platform_ui_tests",
        "description": "platform_ui_tests"
      },
      {
        "name": "testcases",
        "description": "testcases"
      },
      {
        "name": "BetweenRetirementAccountToAccountTransferToggleOn",
        "description": "BetweenRetirementAccountToAccountTransferToggleOn"
      }
    ],
    "narrative": "",
    "type": "feature"
  },
  "title": "Between flow: accounts are enabled for - From 313 rule ID to 313 rule ID, the Same SSN",
  "coreIssues": [
    "ATMT-30288",
    "ATMT-34297",
    "ATMT-37866",
    "ATMT-42489"
  ],
  "tags": [
    {
      "name": "between-flow",
      "type": "tag",
      "displayName": "between-flow"
    },
    {
      "name": "Priority-2a",
      "type": "tag",
      "displayName": "Priority-2a"
    },
    {
      "name": "Microsoftedge",
      "type": "context",
      "displayName": "Microsoftedge"
    },
    {
      "name": "DB-test-data",
      "type": "tag",
      "displayName": "DB-test-data"
    },
    {
      "name": "Platform1-Regression",
      "type": "tag",
      "displayName": "Platform1-Regression"
    },
    {
      "name": "Platform1-Between-Transfer",
      "type": "tag",
      "displayName": "Platform1-Between-Transfer"
    },
    {
      "name": "Platform1-Regression-Daily",
      "type": "tag",
      "displayName": "Platform1-Regression-Daily"
    }
  ],
  "startTime": "2025-10-06T10:29:43.195205514-05:00[America/Chicago]",
  "endTime": "2025-10-06T10:30:48.532701624-05:00[America/Chicago]",
  "duration": 65337,
  "testFailureCause": {
    "errorType": "net.thucydides.model.domain.MultipleAssertionErrors",
    "message": "\nThe following 2 assertions failed:\n1) Error in reading data from DB2\n2) [jcc][t4][2030][11211][4.29.24] A communication error occurred during operations on the connection\u0027s underlying socket, socket input stream, \nor socket output stream.  Error location: Query timeout check.  Message: Query timed out. ERRORCODE\u003d-4499, SQLSTATE\u003d08001\n",
    "stackTrace": [
      {
        "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
        "methodName": "run",
        "fileName": "GradleWorkerMain.java",
        "lineNumber": 69
      },
      {
        "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
        "methodName": "main",
        "fileName": "GradleWorkerMain.java",
        "lineNumber": 74
      }
    ]
  },
  "testFailureClassname": "net.thucydides.model.domain.MultipleAssertionErrors",
  "testFailureMessage": "\nThe following 2 assertions failed:\n1) Error in reading data from DB2\n2) [jcc][t4][2030][11211][4.29.24] A communication error occurred during operations on the connection\u0027s underlying socket, socket input stream, \nor socket output stream.  Error location: Query timeout check.  Message: Query timed out. ERRORCODE\u003d-4499, SQLSTATE\u003d08001\n",
  "testFailureSummary": "\nThe following 2 assertions failed:\n1) Error in reading data from DB2\n2) [jcc][t4][2030][11211][4.29.24] A communication error occurred during operations on the connection\u0027s underlying socket, socket input stream, \nor socket output stream.  Error location: Query timeout check.  Message: Query timed out. ERRORCODE\u003d-4499, SQLSTATE\u003d08001\n",
  "projectKey": "",
  "annotatedResult": "ERROR",
  "sessionId": "a9b5b877a02d443907dc97ac27cd3005",
  "driver": "remote",
  "isManualTestingUpToDate": false,
  "context": "microsoftedge",
  "manual": false,
  "testSource": "JUnit5",
  "order": 0,
  "result": "ERROR",
  "issues": [
    "ATMT-30288",
    "ATMT-34297",
    "ATMT-37866",
    "ATMT-42489"
  ],
  "scenarioOutline": ""
}