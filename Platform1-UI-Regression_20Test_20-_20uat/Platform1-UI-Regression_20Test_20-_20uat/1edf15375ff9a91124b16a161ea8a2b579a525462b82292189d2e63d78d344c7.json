{
  "name": "verifyAccountToAccountTransferWithoutClientSign()",
  "id": "[engine:junit-jupiter]/[class:com.edwardjones.platform_ui_tests.testcases.SubmitAccountToAccountTransferTest]/[method:verifyAccountToAccountTransferWithoutClientSign()]",
  "scenarioId": "[engine:junit-jupiter]/[class:com.edwardjones.platform_ui_tests.testcases.SubmitAccountToAccountTransferTest]",
  "testCaseName": "com.edwardjones.platform_ui_tests.testcases.SubmitAccountToAccountTransferTest",
  "methodName": "verifyAccountToAccountTransferWithoutClientSign",
  "testSteps": [
    {
      "number": 1,
      "description": "Retrieve DB data for \u0027Between\u0027 flow: Select Individual accounts",
      "duration": 35655,
      "startTime": "2025-10-06T10:31:27.902094108-05:00[America/Chicago]",
      "screenshots": [
        {
          "screenshot": "69d44742509463c28128826caad84e27f7d631c27be3c5d0f16351b323ff8f4b.png",
          "htmlSource": "pagesource486909765634453159.html",
          "timeStamp": 1759764723555,
          "screenshotName": "69d44742509463c28128826caad84e27f7d631c27be3c5d0f16351b323ff8f4b.png"
        }
      ],
      "exception": {
        "errorType": "com.edwardjones.database.exceptions.DbDataIsNotRetrievedException",
        "message": "Error in reading data from DB2",
        "stackTrace": [
          {
            "declaringClass": "com.edwardjones.database.helpers.Db2Helper",
            "methodName": "getResultSet",
            "fileName": "Db2Helper.java",
            "lineNumber": 69
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
            "methodName": "readDb2Data",
            "fileName": "BaseTestDataProvider.java",
            "lineNumber": 119
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
            "methodName": "readDb2Data",
            "fileName": "BaseTestDataProvider.java",
            "lineNumber": 106
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
            "methodName": "readDataForRelationships",
            "fileName": "BetweenFlowDb2TestDataProvider.java",
            "lineNumber": 372
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
            "methodName": "readDataForRelationships",
            "fileName": "BetweenFlowDb2TestDataProvider.java",
            "lineNumber": 363
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
            "methodName": "readDataPart1",
            "fileName": "BetweenFlowDb2TestDataProvider.java",
            "lineNumber": 296
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
            "methodName": "getData",
            "fileName": "BetweenFlowDb2TestDataProvider.java",
            "lineNumber": 265
          },
          {
            "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
            "methodName": "getData",
            "fileName": "BetweenFlowDb2TestDataProvider.java",
            "lineNumber": 225
          },
          {
            "declaringClass": "com.edwardjones.platform_ui_tests.testcases.SubmitAccountToAccountTransferTest",
            "methodName": "verifyAccountToAccountTransferWithoutClientSign",
            "fileName": "SubmitAccountToAccountTransferTest.java",
            "lineNumber": 45
          },
          {
            "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
            "methodName": "run",
            "fileName": "GradleWorkerMain.java",
            "lineNumber": 69
          },
          {
            "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
            "methodName": "main",
            "fileName": "GradleWorkerMain.java",
            "lineNumber": 74
          }
        ],
        "rootCause": {
          "errorType": "org.awaitility.core.ConditionTimeoutException",
          "message": "Condition com.edwardjones.database.dataproviders.base.Db2ConnectionProvider was not fulfilled within 30 seconds.",
          "stackTrace": [
            {
              "declaringClass": "org.awaitility.core.ConditionAwaiter",
              "methodName": "await",
              "fileName": "ConditionAwaiter.java",
              "lineNumber": 167
            },
            {
              "declaringClass": "org.awaitility.core.CallableCondition",
              "methodName": "await",
              "fileName": "CallableCondition.java",
              "lineNumber": 78
            },
            {
              "declaringClass": "org.awaitility.core.CallableCondition",
              "methodName": "await",
              "fileName": "CallableCondition.java",
              "lineNumber": 26
            },
            {
              "declaringClass": "org.awaitility.core.ConditionFactory",
              "methodName": "until",
              "fileName": "ConditionFactory.java",
              "lineNumber": 985
            },
            {
              "declaringClass": "org.awaitility.core.ConditionFactory",
              "methodName": "until",
              "fileName": "ConditionFactory.java",
              "lineNumber": 954
            },
            {
              "declaringClass": "com.edwardjones.database.helpers.Db2Helper",
              "methodName": "getDb2ConnectionStatement",
              "fileName": "Db2Helper.java",
              "lineNumber": 87
            },
            {
              "declaringClass": "com.edwardjones.database.helpers.Db2Helper",
              "methodName": "getResultSet",
              "fileName": "Db2Helper.java",
              "lineNumber": 54
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
              "methodName": "readDb2Data",
              "fileName": "BaseTestDataProvider.java",
              "lineNumber": 119
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
              "methodName": "readDb2Data",
              "fileName": "BaseTestDataProvider.java",
              "lineNumber": 106
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
              "methodName": "readDataForRelationships",
              "fileName": "BetweenFlowDb2TestDataProvider.java",
              "lineNumber": 372
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
              "methodName": "readDataForRelationships",
              "fileName": "BetweenFlowDb2TestDataProvider.java",
              "lineNumber": 363
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
              "methodName": "readDataPart1",
              "fileName": "BetweenFlowDb2TestDataProvider.java",
              "lineNumber": 296
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
              "methodName": "getData",
              "fileName": "BetweenFlowDb2TestDataProvider.java",
              "lineNumber": 265
            },
            {
              "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
              "methodName": "getData",
              "fileName": "BetweenFlowDb2TestDataProvider.java",
              "lineNumber": 225
            },
            {
              "declaringClass": "com.edwardjones.platform_ui_tests.testcases.SubmitAccountToAccountTransferTest",
              "methodName": "verifyAccountToAccountTransferWithoutClientSign",
              "fileName": "SubmitAccountToAccountTransferTest.java",
              "lineNumber": 45
            },
            {
              "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
              "methodName": "run",
              "fileName": "GradleWorkerMain.java",
              "lineNumber": 69
            },
            {
              "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
              "methodName": "main",
              "fileName": "GradleWorkerMain.java",
              "lineNumber": 74
            }
          ],
          "rootCause": {
            "errorType": "java.util.concurrent.TimeoutException",
            "stackTrace": [
              {
                "declaringClass": "org.awaitility.core.Uninterruptibles",
                "methodName": "getUninterruptibly",
                "fileName": "Uninterruptibles.java",
                "lineNumber": 101
              },
              {
                "declaringClass": "org.awaitility.core.Uninterruptibles",
                "methodName": "getUninterruptibly",
                "fileName": "Uninterruptibles.java",
                "lineNumber": 81
              },
              {
                "declaringClass": "org.awaitility.core.ConditionAwaiter",
                "methodName": "await",
                "fileName": "ConditionAwaiter.java",
                "lineNumber": 103
              },
              {
                "declaringClass": "org.awaitility.core.CallableCondition",
                "methodName": "await",
                "fileName": "CallableCondition.java",
                "lineNumber": 78
              },
              {
                "declaringClass": "org.awaitility.core.CallableCondition",
                "methodName": "await",
                "fileName": "CallableCondition.java",
                "lineNumber": 26
              },
              {
                "declaringClass": "org.awaitility.core.ConditionFactory",
                "methodName": "until",
                "fileName": "ConditionFactory.java",
                "lineNumber": 985
              },
              {
                "declaringClass": "org.awaitility.core.ConditionFactory",
                "methodName": "until",
                "fileName": "ConditionFactory.java",
                "lineNumber": 954
              },
              {
                "declaringClass": "com.edwardjones.database.helpers.Db2Helper",
                "methodName": "getDb2ConnectionStatement",
                "fileName": "Db2Helper.java",
                "lineNumber": 87
              },
              {
                "declaringClass": "com.edwardjones.database.helpers.Db2Helper",
                "methodName": "getResultSet",
                "fileName": "Db2Helper.java",
                "lineNumber": 54
              },
              {
                "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
                "methodName": "readDb2Data",
                "fileName": "BaseTestDataProvider.java",
                "lineNumber": 119
              },
              {
                "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
                "methodName": "readDb2Data",
                "fileName": "BaseTestDataProvider.java",
                "lineNumber": 106
              },
              {
                "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
                "methodName": "readDataForRelationships",
                "fileName": "BetweenFlowDb2TestDataProvider.java",
                "lineNumber": 372
              },
              {
                "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
                "methodName": "readDataForRelationships",
                "fileName": "BetweenFlowDb2TestDataProvider.java",
                "lineNumber": 363
              },
              {
                "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
                "methodName": "readDataPart1",
                "fileName": "BetweenFlowDb2TestDataProvider.java",
                "lineNumber": 296
              },
              {
                "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
                "methodName": "getData",
                "fileName": "BetweenFlowDb2TestDataProvider.java",
                "lineNumber": 265
              },
              {
                "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
                "methodName": "getData",
                "fileName": "BetweenFlowDb2TestDataProvider.java",
                "lineNumber": 225
              },
              {
                "declaringClass": "com.edwardjones.platform_ui_tests.testcases.SubmitAccountToAccountTransferTest",
                "methodName": "verifyAccountToAccountTransferWithoutClientSign",
                "fileName": "SubmitAccountToAccountTransferTest.java",
                "lineNumber": 45
              },
              {
                "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
                "methodName": "run",
                "fileName": "GradleWorkerMain.java",
                "lineNumber": 69
              },
              {
                "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
                "methodName": "main",
                "fileName": "GradleWorkerMain.java",
                "lineNumber": 74
              }
            ]
          }
        }
      },
      "result": "ERROR",
      "reportData": [
        {
          "title": "SQL query",
          "contents": "select\nrlt.RLTSHP_ID AS RELID, sub_acc.BR_NO,\ncount(distinct sub_acc.TAX_RPT_TIN_NO) as SSN_COUNT,\ncount(distinct sub_acc_svc.acct_ID) as ACCOUNTS_COUNT,\nmin(sub_acc.TAX_RPT_TIN_NO) as ssn1, max(sub_acc.TAX_RPT_TIN_NO) as ssn2,\nmin(sub_acc_svc.acct_ID) as acct1, max(sub_acc_svc.acct_ID) as acct2\n\nfrom PROD.SUB_ACCOUNT_12512 as sub_acc\njoin PROD.SUBACCT_SVC_12569 sub_acc_svc on sub_acc.ACCT_ID \u003d sub_acc_svc.ACCT_ID\njoin PROD.RLTSHP_13120 as rlt on rlt.ACCT_FUNC_GRP_ID \u003d acctgrp.ACCT_FUNC_GRP_ID\njoin PROD.ACCT_FUNC_GRP_DTL_13088 as acctgrp on acctgrp.ACCT_ID\u003dsub_acc.ACCT_ID\njoin PROD.ACCOUNT_12280 account on account.ACCT_ID\u003dsub_acc.ACCT_ID\nwhere\n-- sub_acc.ACCT_OWN_SUBTY_CD is not NULL and\nsub_acc.ACCT_CLS_UT is NULL\nand sub_acc.BR_NO in (1626, 2153, 4369, 9005, 3434, 94674, 87782, 7822, 5897, 3997, 19864, 99785, 99732, 99464, 99447, 98594, 95528, 4454, 9979)\nand sub_acc_svc.ISO_CTRY_CD\u003d\u0027US\u0027\nand account.acct_own_rule_id in (309)\nand account.dcdnt_retr_ind \u003d \u0027N\u0027\n and sub_acc_svc.ACCT_SVC_TY_CD in (\u0027SE\u0027)\n and sub_acc_svc.ACCT_SVC_STAT_CD in (\u0027A\u0027, \u0027C\u0027)\n-- and rlt.RLTSHP_ID in ()\n\nand sub_acc.acct_id not in \n(               select a.acct_id\n                from\n                    PROD.ACCOUNT_12280 a\n                    left outer join PROD.acct_rst_10214 v on v.account_no\u003d a.cust_no\n                    inner join PROD.ACCT_OWN_RUL_12520 acc_own_rule on acc_own_rule.ACCT_OWN_RULE_ID \u003d  a.ACCT_OWN_RULE_ID\n                    inner join PROD.OWN_CLASS_12680 cls on  acc_own_rule.ACCT_OWN_RULE_ID \u003d  cls.ACCT_OWN_RULE_ID\n                    inner join PROD.SUB_ACCOUNT_12512 as sub_acc on sub_acc.ACCT_ID\u003da.ACCT_ID\n                where\n                    v.rst_rsn_cd is not null\n                    and v.rst_rsn_cd in (\u0027AUTH\u0027, \u0027DOCU\u0027, \u0027WARN\u0027, \u0027CIPR\u0027, \u0027COPD\u0027, \u0027CO\u0027, \u0027RISK\u0027, \u0027SSN\u0027, \u0027FTRN\u0027, \u002772T\u0027, \u0027MISC\u0027, \u0027MAIL\u0027, \u0027FOR\u0027, \u0027FOR2\u0027, \u0027R471\u0027, \u0027R407\u0027,\u0027DEATH\u0027)\n\t\t\t\t\tand a.acct_own_rule_id in (309)\n                    and sub_acc.BR_NO in (1626, 2153, 4369, 9005, 3434, 94674, 87782, 7822, 5897, 3997, 19864, 99785, 99732, 99464, 99447, 98594, 95528, 4454, 9979)\n                    and a.ACCT_CLS_DA is null\n                    and v.RST_START_DA\u003c\u00272025-10-06\u0027\n)\n\ngroup by rlt.RLTSHP_ID, sub_acc.BR_NO\nhaving \ncount(distinct sub_acc_svc.ACCT_ID)\u003e1 \nand count(distinct sub_acc.TAX_RPT_TIN_NO) \u003e 1\nand count(distinct account.acct_own_rule_id) \u003d 1\n\n-- and min(case (accountsData.COUNT_CASH + accountsData.COUNT_MARGIN*2 + accountsData.COUNT_LOAN*4) when 1 then accountsData.acct_ID end) is not null\n-- and max(case (accountsData.COUNT_CASH + accountsData.COUNT_MARGIN*2 + accountsData.COUNT_LOAN*4) when 1 then accountsData.acct_ID end) is not null\n-- and min(case (accountsData.COUNT_CASH + accountsData.COUNT_MARGIN*2 + accountsData.COUNT_LOAN*4) when 7 then accountsData.acct_ID end) is not null\n-- and max(case (accountsData.COUNT_CASH + accountsData.COUNT_MARGIN*2 + accountsData.COUNT_LOAN*4) when 7 then accountsData.acct_ID end) is not null\n\nfetch first 1 rows only;",
          "isEvidence": false,
          "id": "report-data-fff92b96-c7ce-4a8b-914c-b3ac021a2f93"
        }
      ],
      "precondition": false,
      "level": 0
    },
    {
      "number": 2,
      "description": "Get p-number for BOA of branch \u003cnull\u003e, relationship \u003cnull\u003e, account \u003cnull\u003e, for Platform flow",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.576276443-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 3,
      "description": "Authenticating the session with pid: ",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.579678135-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 4,
      "description": "Opening the asset movement page for relationship id: \u003cnull\u003e",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.583038330-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 5,
      "description": "Given set Internal Transfer Feature Toggle false",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.586195629-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 6,
      "description": "Verify \u0027Between\u0027 option displayed is false",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.589077691-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 7,
      "description": "Given set Internal Transfer Feature Toggle true",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.592502369-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 8,
      "description": "Update the URL for Internal Transfer",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.595613287-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 9,
      "description": "Verify \u0027Between\u0027 option displayed is true",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.599129395-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 10,
      "description": "Verify \u0027Between\u0027 option Clickable is true",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.602017306-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 11,
      "description": "Verify the flow name inside Between Container is Between Edward Jones Accounts",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.604808702-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 12,
      "description": "Continue button is enabled false",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.607637561-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 13,
      "description": "Choose transfer \u0027Between\u0027 accounts",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.610376891-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 14,
      "description": "Select searched account \u003cnull\u003e",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.613514831-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 15,
      "description": "Select the First Available Owner",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.616630529-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 16,
      "description": "Click continue button",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.619410915-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 17,
      "description": "Select searched account \u003cnull\u003e",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.622774761-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 18,
      "description": "Click continue button",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.625682362-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 19,
      "description": "Continue button is enabled true",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.628455662-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 20,
      "description": "Click continue button",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.631131719-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 21,
      "description": "Choose Client Signature card is disabled true",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.633932699-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 22,
      "description": "Enter $5.26 as Cash Amount to Transfer",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.641325705-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 23,
      "description": "Ensure additional radio buttons are selected",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.644073066-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 24,
      "description": "Continue button is enabled true",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.646955364-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 25,
      "description": "Choose Client Signature card is disabled false",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.649955797-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 26,
      "description": "Click continue button",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.652675640-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 27,
      "description": "\u0027Review transaction\u0027 button is enabled true",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.655484613-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 28,
      "description": "Verify the text displayed when client Signature Not required is Client signature is not required. To proceed, click \u0027Review Transaction\u0027.",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.658097515-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 29,
      "description": "Review transaction",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.661290108-05:00[America/Chicago]",
      "result": "SKIPPED",
      "precondition": false,
      "level": 0
    },
    {
      "number": 30,
      "description": "Verify Transfer Confirmation Details Page displayed is true",
      "duration": 0,
      "startTime": "2025-10-06T10:32:03.664032902-05:00[America/Chicago]",
      "result": "SKIPPED",
      "reportData": [
        {
          "title": "...qTest Listener disabled",
          "contents": "Listener disabled or Serenity \u0027Result\u0027 is \u0027IGNORED\u0027 or Test Suite is invalid",
          "isEvidence": false,
          "id": "report-data-d4cc84c2-c067-4762-9246-3e1d3cd03d2c"
        },
        {
          "title": "Error submitting test results. INFO only",
          "contents": "closed",
          "isEvidence": false,
          "id": "report-data-aaad2358-7343-4796-af1a-fdd911952a7a"
        }
      ],
      "precondition": false,
      "level": 0
    }
  ],
  "userStory": {
    "id": "com.edwardjones.platform_ui_tests.testcases.SubmitAccountToAccountTransferTest",
    "storyName": "SubmitAccountToAccountTransferTest",
    "displayName": "SubmitAccountToAccountTransferTest",
    "storyClassName": "com.edwardjones.platform_ui_tests.testcases.SubmitAccountToAccountTransferTest",
    "path": "com.edwardjones.platform_ui_tests.testcases.SubmitAccountToAccountTransferTest",
    "pathElements": [
      {
        "name": "com",
        "description": "com"
      },
      {
        "name": "edwardjones",
        "description": "edwardjones"
      },
      {
        "name": "platform_ui_tests",
        "description": "platform_ui_tests"
      },
      {
        "name": "testcases",
        "description": "testcases"
      },
      {
        "name": "SubmitAccountToAccountTransferTest",
        "description": "SubmitAccountToAccountTransferTest"
      }
    ],
    "narrative": "",
    "type": "feature"
  },
  "title": "Submit Account-to-Account transfer using new design flow without Client Signature",
  "coreIssues": [
    "ATMT-18259"
  ],
  "tags": [
    {
      "name": "between-flow",
      "type": "tag",
      "displayName": "between-flow"
    },
    {
      "name": "Priority-2a",
      "type": "tag",
      "displayName": "Priority-2a"
    },
    {
      "name": "Microsoftedge",
      "type": "context",
      "displayName": "Microsoftedge"
    },
    {
      "name": "Platform1-Regression",
      "type": "tag",
      "displayName": "Platform1-Regression"
    },
    {
      "name": "DB-test-data",
      "type": "tag",
      "displayName": "DB-test-data"
    },
    {
      "name": "new-old-ui",
      "type": "tag",
      "displayName": "new-old-ui"
    },
    {
      "name": "Platform1-Regression-Daily",
      "type": "tag",
      "displayName": "Platform1-Regression-Daily"
    }
  ],
  "startTime": "2025-10-06T10:31:27.898931876-05:00[America/Chicago]",
  "endTime": "2025-10-06T10:32:03.665794958-05:00[America/Chicago]",
  "duration": 35766,
  "testFailureCause": {
    "errorType": "org.awaitility.core.ConditionTimeoutException",
    "message": "Condition com.edwardjones.database.dataproviders.base.Db2ConnectionProvider was not fulfilled within 30 seconds.",
    "stackTrace": [
      {
        "declaringClass": "org.awaitility.core.ConditionAwaiter",
        "methodName": "await",
        "fileName": "ConditionAwaiter.java",
        "lineNumber": 167
      },
      {
        "declaringClass": "org.awaitility.core.CallableCondition",
        "methodName": "await",
        "fileName": "CallableCondition.java",
        "lineNumber": 78
      },
      {
        "declaringClass": "org.awaitility.core.CallableCondition",
        "methodName": "await",
        "fileName": "CallableCondition.java",
        "lineNumber": 26
      },
      {
        "declaringClass": "org.awaitility.core.ConditionFactory",
        "methodName": "until",
        "fileName": "ConditionFactory.java",
        "lineNumber": 985
      },
      {
        "declaringClass": "org.awaitility.core.ConditionFactory",
        "methodName": "until",
        "fileName": "ConditionFactory.java",
        "lineNumber": 954
      },
      {
        "declaringClass": "com.edwardjones.database.helpers.Db2Helper",
        "methodName": "getDb2ConnectionStatement",
        "fileName": "Db2Helper.java",
        "lineNumber": 87
      },
      {
        "declaringClass": "com.edwardjones.database.helpers.Db2Helper",
        "methodName": "getResultSet",
        "fileName": "Db2Helper.java",
        "lineNumber": 54
      },
      {
        "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
        "methodName": "readDb2Data",
        "fileName": "BaseTestDataProvider.java",
        "lineNumber": 119
      },
      {
        "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
        "methodName": "readDb2Data",
        "fileName": "BaseTestDataProvider.java",
        "lineNumber": 106
      },
      {
        "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
        "methodName": "readDataForRelationships",
        "fileName": "BetweenFlowDb2TestDataProvider.java",
        "lineNumber": 372
      },
      {
        "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
        "methodName": "readDataForRelationships",
        "fileName": "BetweenFlowDb2TestDataProvider.java",
        "lineNumber": 363
      },
      {
        "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
        "methodName": "readDataPart1",
        "fileName": "BetweenFlowDb2TestDataProvider.java",
        "lineNumber": 296
      },
      {
        "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
        "methodName": "getData",
        "fileName": "BetweenFlowDb2TestDataProvider.java",
        "lineNumber": 265
      },
      {
        "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
        "methodName": "getData",
        "fileName": "BetweenFlowDb2TestDataProvider.java",
        "lineNumber": 225
      },
      {
        "declaringClass": "com.edwardjones.platform_ui_tests.testcases.SubmitAccountToAccountTransferTest",
        "methodName": "verifyAccountToAccountTransferWithoutClientSign",
        "fileName": "SubmitAccountToAccountTransferTest.java",
        "lineNumber": 45
      },
      {
        "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
        "methodName": "run",
        "fileName": "GradleWorkerMain.java",
        "lineNumber": 69
      },
      {
        "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
        "methodName": "main",
        "fileName": "GradleWorkerMain.java",
        "lineNumber": 74
      }
    ],
    "rootCause": {
      "errorType": "java.util.concurrent.TimeoutException",
      "stackTrace": [
        {
          "declaringClass": "org.awaitility.core.Uninterruptibles",
          "methodName": "getUninterruptibly",
          "fileName": "Uninterruptibles.java",
          "lineNumber": 101
        },
        {
          "declaringClass": "org.awaitility.core.Uninterruptibles",
          "methodName": "getUninterruptibly",
          "fileName": "Uninterruptibles.java",
          "lineNumber": 81
        },
        {
          "declaringClass": "org.awaitility.core.ConditionAwaiter",
          "methodName": "await",
          "fileName": "ConditionAwaiter.java",
          "lineNumber": 103
        },
        {
          "declaringClass": "org.awaitility.core.CallableCondition",
          "methodName": "await",
          "fileName": "CallableCondition.java",
          "lineNumber": 78
        },
        {
          "declaringClass": "org.awaitility.core.CallableCondition",
          "methodName": "await",
          "fileName": "CallableCondition.java",
          "lineNumber": 26
        },
        {
          "declaringClass": "org.awaitility.core.ConditionFactory",
          "methodName": "until",
          "fileName": "ConditionFactory.java",
          "lineNumber": 985
        },
        {
          "declaringClass": "org.awaitility.core.ConditionFactory",
          "methodName": "until",
          "fileName": "ConditionFactory.java",
          "lineNumber": 954
        },
        {
          "declaringClass": "com.edwardjones.database.helpers.Db2Helper",
          "methodName": "getDb2ConnectionStatement",
          "fileName": "Db2Helper.java",
          "lineNumber": 87
        },
        {
          "declaringClass": "com.edwardjones.database.helpers.Db2Helper",
          "methodName": "getResultSet",
          "fileName": "Db2Helper.java",
          "lineNumber": 54
        },
        {
          "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
          "methodName": "readDb2Data",
          "fileName": "BaseTestDataProvider.java",
          "lineNumber": 119
        },
        {
          "declaringClass": "com.edwardjones.database.dataproviders.base.BaseTestDataProvider",
          "methodName": "readDb2Data",
          "fileName": "BaseTestDataProvider.java",
          "lineNumber": 106
        },
        {
          "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
          "methodName": "readDataForRelationships",
          "fileName": "BetweenFlowDb2TestDataProvider.java",
          "lineNumber": 372
        },
        {
          "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
          "methodName": "readDataForRelationships",
          "fileName": "BetweenFlowDb2TestDataProvider.java",
          "lineNumber": 363
        },
        {
          "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
          "methodName": "readDataPart1",
          "fileName": "BetweenFlowDb2TestDataProvider.java",
          "lineNumber": 296
        },
        {
          "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
          "methodName": "getData",
          "fileName": "BetweenFlowDb2TestDataProvider.java",
          "lineNumber": 265
        },
        {
          "declaringClass": "com.edwardjones.database.dataproviders.platform.BetweenFlowDb2TestDataProvider",
          "methodName": "getData",
          "fileName": "BetweenFlowDb2TestDataProvider.java",
          "lineNumber": 225
        },
        {
          "declaringClass": "com.edwardjones.platform_ui_tests.testcases.SubmitAccountToAccountTransferTest",
          "methodName": "verifyAccountToAccountTransferWithoutClientSign",
          "fileName": "SubmitAccountToAccountTransferTest.java",
          "lineNumber": 45
        },
        {
          "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
          "methodName": "run",
          "fileName": "GradleWorkerMain.java",
          "lineNumber": 69
        },
        {
          "declaringClass": "worker.org.gradle.process.internal.worker.GradleWorkerMain",
          "methodName": "main",
          "fileName": "GradleWorkerMain.java",
          "lineNumber": 74
        }
      ]
    }
  },
  "testFailureClassname": "org.awaitility.core.ConditionTimeoutException",
  "testFailureMessage": "Error in reading data from DB2",
  "testFailureSummary": "ERROR;org.awaitility.core.ConditionTimeoutException;Condition com.edwardjones.database.dataproviders.base.Db2ConnectionProvider was not fulfilled within 30 seconds.;ConditionAwaiter.java",
  "projectKey": "",
  "annotatedResult": "ERROR",
  "sessionId": "00677fe1f6a7f6f7d8bddef911d67dbc",
  "driver": "remote",
  "isManualTestingUpToDate": false,
  "context": "microsoftedge",
  "manual": false,
  "testSource": "JUnit5",
  "order": 0,
  "result": "ERROR",
  "issues": [
    "ATMT-18259"
  ],
  "scenarioOutline": ""
}